import { useState } from 'react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent } from '@/components/ui/card';
import { ArrowLeft } from 'lucide-react';
import { Link } from 'react-router-dom';

const PremiumYorum = () => {
  const [formData, setFormData] = useState({
    ad: '',
    dogum_tarihi: '',
    saat: '',
    yer: '',
    sosyal_medya: ''
  });
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState('');
  const [demoMode, setDemoMode] = useState(true);

  const getDemoResponse = (name: string) => {
    return `‚ú® ${name} i√ßin NASA Entegreli Haftalƒ±k Astro Rehber:

‚òÄÔ∏è G√ºne≈ü Burcu: ƒ∞kizler
üåô Ay Burcu: Aslan
‚¨ÜÔ∏è Y√ºkselen Burcu: Terazi

üî≠ Bug√ºnk√º G√∂ky√ºz√º Enerjisi:
"Orion Nebulasƒ±: Yƒ±ldƒ±zlarƒ±n Doƒüu≈ü Yeri" ‚Üí Bu kozmik kre≈ü gibi nebula, senin i√ßindeki yaratƒ±cƒ± potansiyelin sembol√º. Hubble Teleskobu'nun √ßektiƒüi bu muhte≈üem g√∂r√ºnt√º, 1,344 ƒ±≈üƒ±k yƒ±lƒ± uzaktaki yƒ±ldƒ±z fabrikasƒ±nƒ± g√∂steriyor. Tƒ±pkƒ± bu nebulada yeni yƒ±ldƒ±zlar doƒüduƒüu gibi, sen de yeni bir d√∂nemin e≈üiƒüindesin.

üåü Y√ºkselen Bur√ß Etkisi:
Terazi y√ºkselenin sana doƒüal bir estetik anlayƒ±≈üƒ± ve adalet duygusu veriyor. Bu hafta bu enerjin √∂zellikle g√º√ßl√º - kararlarƒ±nda dengeyi g√∂zetecek, g√ºzelliƒüi fark edeceksin.

${formData.sosyal_medya ? `üí¨ Sosyal Medya Ruh Hali:
Son payla≈üƒ±mlarƒ±ndan iyimser ve yaratƒ±cƒ± bir enerji yansƒ±yor. ƒ∞√ßsel motivasyonun y√ºksek g√∂r√ºn√ºyor.

` : ''}üîÆ Genel Enerji:
Bu hafta ƒ∞kizler burcunun meraklƒ± doƒüasƒ± ve Aslan ayƒ±nƒ±n yaratƒ±cƒ± ate≈üi birle≈üiyor. NASA'nƒ±n bug√ºnk√º Orion Nebulasƒ± g√∂r√ºnt√ºs√º gibi, sen de parlayan bir yaratƒ±m d√∂neminin i√ßindesin.

üß≠ Tavsiyeler:
- Yaratƒ±cƒ±lƒ±ƒüƒ±nƒ± √∂zg√ºrce ifade et, evren seni destekliyor
- ƒ∞leti≈üimde kalbin konu≈üsun, samimiyetin kapƒ±larƒ± a√ßacak
- Bug√ºn g√∂ky√ºz√ºne bak ve kendi sƒ±nƒ±rsƒ±z potansiyelini hatƒ±rla

üåå Mesajƒ±n:
Orion Nebulasƒ±'ndaki yƒ±ldƒ±zlar gibi, sen de parlak bir gelecek yaratƒ±yorsun! ‚ú®`;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    console.log('PremiumYorum form submitted with data:', formData);
    setIsLoading(true);
    
    try {
      if (demoMode) {
        console.log('Demo mode active, simulating NASA API call...');
        await new Promise(resolve => setTimeout(resolve, 3000));
        const demoResult = getDemoResponse(formData.ad);
        console.log('Demo NASA + Astro result generated:', demoResult);
        setResult(demoResult);
      } else {
        console.log('Real mode: Fetching NASA APOD...');
        const nasaResponse = await fetch('https://api.nasa.gov/planetary/apod?api_key=cPQ26NgOmbQZh5Tk1uZh3DDqVd7n6iVivZH9mhGy');
        const nasaData = await nasaResponse.json();
        console.log('NASA data received:', nasaData);
        
        console.log('Calling OpenAI with NASA data...');
        const response = await fetch('https://api.openai.com/v1/chat/completions', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${import.meta.env.VITE_OPENAI_API_KEY}`
          },
          body: JSON.stringify({
            model: 'gpt-4.1-2025-04-14',
            messages: [{
              role: 'user',
              content: `Sen AstroMind adƒ±nda bir yapay zek√¢lƒ± astrologsun. Kullanƒ±cƒ±nƒ±n doƒüum bilgileriyle birlikte NASA'nƒ±n bug√ºnk√º g√∂ky√ºz√º g√∂rselini ve varsa sosyal medya yazƒ±larƒ±nƒ± da analiz ederek ona √∂zel bir haftalƒ±k astroloji rehberi hazƒ±rlƒ±yorsun.

Kullanƒ±cƒ± bilgileri:
- Ad: ${formData.ad}
- Doƒüum Tarihi: ${formData.dogum_tarihi}
- Saat: ${formData.saat}
- Yer: ${formData.yer}

Bug√ºnk√º yƒ±ldƒ±z g√∂rseli: ${nasaData.title}
NASA a√ßƒ±klamasƒ±: ${nasaData.explanation}

Kullanƒ±cƒ±nƒ±n sosyal medya yazƒ±larƒ± (isteƒüe baƒülƒ±): ${formData.sosyal_medya || 'Belirtilmedi'}

G√∂revin:
1. G√ºne≈ü, Ay ve Y√ºkselen bur√ßlarƒ±nƒ± yakla≈üƒ±k tahmin et  
2. NASA g√∂rselinden sembolik bir √ßƒ±karƒ±m yap (√∂rneƒüin: galaksi geni≈üliyorsa ‚Üí i√ßsel b√ºy√ºme temasƒ±)  
3. Y√ºkselen burca √∂zel karakter analizi ve bu haftaya etkisi  
4. Eƒüer kullanƒ±cƒ± sosyal medya yazƒ±sƒ± girdiyse:
   - Yazƒ±lardan duygusal ton, zihinsel odak ve ruh halini √ßƒ±kar
   - Astrolojik tavsiyeleri bu ki≈üisel veriye g√∂re uyarla
5. 3 maddelik tavsiye ver  
6. Kƒ±sa pozitif kapanƒ±≈ü mesajƒ± yaz

T√ºrk√ße, pozitif ve sezgisel bir ton kullan. 250 kelimeyi ge√ßmesin.

Yanƒ±t formatƒ±:

‚ú® ${formData.ad} i√ßin Haftalƒ±k Astro Rehber:

‚òÄÔ∏è G√ºne≈ü Burcu: [tahmin]  
üåô Ay Burcu: [tahmin]  
‚¨ÜÔ∏è Y√ºkselen Burcu: [tahmin]

üî≠ Bug√ºnk√º G√∂ky√ºz√º Enerjisi:  
${nasaData.title} ‚Üí [sembolik anlam]

üåü Y√ºkselen Bur√ß Etkisi:  
[Y√ºkselen burca √∂zel ki≈üilik + haftalƒ±k etkisi]

üí¨ Sosyal Medya Ruh Hali (varsa):  
[Eƒüer sosyal medya yazƒ±sƒ± varsa analiz yap]

üîÆ Genel Enerji:  
[Ki≈üisel haftalƒ±k yorum]

üß≠ Tavsiyeler:  
- [1]  
- [2]  
- [3]

üåå Mesajƒ±n:  
[Kƒ±sa pozitif kapanƒ±≈ü]`
            }],
            max_tokens: 500,
            temperature: 0.7
          })
        });

        const data = await response.json();
        console.log('OpenAI response received:', data);
        setResult(data.choices[0].message.content);
      }
    } catch (error) {
      console.error('Error in PremiumYorum:', error);
      if (demoMode) {
        const fallbackResult = getDemoResponse(formData.ad);
        console.log('Using fallback demo result:', fallbackResult);
        setResult(fallbackResult);
      } else {
        setResult('Bir hata olu≈ütu. L√ºtfen tekrar deneyin.');
      }
    } finally {
      setIsLoading(false);
      console.log('PremiumYorum form submission completed');
    }
  };

  const handleChange = (field: string) => (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    console.log(`PremiumYorum field ${field} changed to:`, e.target.value);
    setFormData(prev => ({
      ...prev,
      [field]: e.target.value
    }));
  };

  const toggleDemoMode = () => {
    console.log('PremiumYorum demo mode toggle clicked, current state:', demoMode);
    setDemoMode(prev => {
      const newValue = !prev;
      console.log('PremiumYorum demo mode changed to:', newValue);
      return newValue;
    });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
      {/* Animated stars background */}
      <div className="absolute inset-0 overflow-hidden">
        {[...Array(50)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-1 h-1 bg-yellow-200 rounded-full opacity-70"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
            }}
            animate={{
              opacity: [0.3, 1, 0.3],
              scale: [0.8, 1.2, 0.8],
            }}
            transition={{
              duration: 2 + Math.random() * 3,
              repeat: Infinity,
              delay: Math.random() * 2,
            }}
          />
        ))}
      </div>

      <div className="relative z-10 container mx-auto px-4 py-8">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="max-w-2xl mx-auto"
        >
          {/* Header */}
          <div className="flex items-center mb-6">
            <Link to="/" className="mr-4">
              <Button variant="ghost" className="text-purple-200 hover:text-white">
                <ArrowLeft className="w-5 h-5 mr-2" />
                Ana Sayfa
              </Button>
            </Link>
            <h1 className="text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 via-purple-300 to-blue-300">
              ‚≠ê Premium Yorum
            </h1>
          </div>

          {/* Demo Mode Toggle */}
          <Card className="bg-slate-800/50 backdrop-blur-sm border-purple-500/30 shadow-2xl mb-6">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-lg font-semibold text-purple-200">Demo Modu</h3>
                  <p className="text-sm text-gray-400">AI API anahtarƒ± olmadan √∂rnek NASA entegreli yanƒ±t g√∂ster</p>
                </div>
                <Button
                  onClick={toggleDemoMode}
                  variant={demoMode ? "default" : "outline"}
                  className={demoMode ? "bg-green-600 hover:bg-green-700" : "border-purple-400 text-purple-200 hover:bg-purple-400/10"}
                >
                  {demoMode ? "Demo Aktif" : "Demo Kapalƒ±"}
                </Button>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-slate-800/50 backdrop-blur-sm border-purple-500/30 shadow-2xl mb-6">
            <CardContent className="p-8">
              <div className="text-center mb-6">
                <h2 className="text-2xl font-semibold text-purple-200 mb-2">
                  üî≠ NASA Entegreli Haftalƒ±k Astro Rehber
                </h2>
                <p className="text-gray-400">
                  Bug√ºnk√º g√∂ky√ºz√º enerjisiyle birle≈üen ki≈üisel astroloji yorumun
                </p>
                {demoMode && (
                  <div className="mt-2 px-3 py-1 bg-green-600/20 border border-green-500/30 rounded-full inline-block">
                    <span className="text-green-300 text-sm">üé≠ Demo Modu Aktif</span>
                  </div>
                )}
              </div>

              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="space-y-2">
                  <Label htmlFor="ad" className="text-purple-200 font-medium">
                    ‚ú® Adƒ±n
                  </Label>
                  <Input
                    id="ad"
                    value={formData.ad}
                    onChange={handleChange('ad')}
                    placeholder="Adƒ±n"
                    className="bg-slate-700/50 border-purple-400/30 text-white placeholder-gray-400 focus:border-purple-400"
                    required
                    disabled={isLoading}
                  />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="dogum_tarihi" className="text-purple-200 font-medium">
                      üóìÔ∏è Doƒüum Tarihi
                    </Label>
                    <Input
                      id="dogum_tarihi"
                      type="date"
                      value={formData.dogum_tarihi}
                      onChange={handleChange('dogum_tarihi')}
                      className="bg-slate-700/50 border-purple-400/30 text-white focus:border-purple-400"
                      required
                      disabled={isLoading}
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="saat" className="text-purple-200 font-medium">
                      üïê Doƒüum Saati
                    </Label>
                    <Input
                      id="saat"
                      type="time"
                      value={formData.saat}
                      onChange={handleChange('saat')}
                      className="bg-slate-700/50 border-purple-400/30 text-white focus:border-purple-400"
                      required
                      disabled={isLoading}
                    />
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="yer" className="text-purple-200 font-medium">
                    üåç Doƒüum Yeri
                  </Label>
                  <Input
                    id="yer"
                    value={formData.yer}
                    onChange={handleChange('yer')}
                    placeholder="ƒ∞stanbul, T√ºrkiye"
                    className="bg-slate-700/50 border-purple-400/30 text-white placeholder-gray-400 focus:border-purple-400"
                    required
                    disabled={isLoading}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="sosyal_medya" className="text-purple-200 font-medium">
                    üì± Son Sosyal Medya Payla≈üƒ±mlarƒ±n (ƒ∞steƒüe Baƒülƒ±)
                  </Label>
                  <textarea
                    id="sosyal_medya"
                    value={formData.sosyal_medya}
                    onChange={handleChange('sosyal_medya')}
                    placeholder="Son sosyal medya payla≈üƒ±mlarƒ±nƒ± buraya yazabilirsin..."
                    className="w-full bg-slate-700/50 border-purple-400/30 text-white placeholder-gray-400 focus:border-purple-400 rounded-md p-3 min-h-[100px] resize-none"
                    disabled={isLoading}
                  />
                  <p className="text-xs text-gray-500">
                    Bu bilgi ruh halini daha iyi anlamamƒ± saƒülar ve daha ki≈üisel tavsiyeler vermemi saƒülar.
                  </p>
                </div>

                <motion.div
                  whileHover={{ scale: isLoading ? 1 : 1.02 }}
                  whileTap={{ scale: isLoading ? 1 : 0.98 }}
                >
                  <Button
                    type="submit"
                    disabled={isLoading}
                    className="w-full bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 text-white font-semibold py-3 text-lg shadow-lg disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {isLoading ? (demoMode ? 'üé≠ Demo NASA & Astro Rehber Hazƒ±rlanƒ±yor...' : 'üî≠ NASA & Astro Rehber Hazƒ±rlanƒ±yor...') : 'üåå Kozmik Astro Rehberimi Al'}
                  </Button>
                </motion.div>
              </form>
            </CardContent>
          </Card>

          {/* Results */}
          {result && (
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              <Card className="bg-slate-800/50 backdrop-blur-sm border-purple-500/30 shadow-2xl">
                <CardContent className="p-8">
                  <div className="text-center mb-6">
                    <h3 className="text-2xl font-semibold text-purple-200 mb-2">
                      üî≠ NASA Entegreli Astro Rehberin
                    </h3>
                    {demoMode && (
                      <div className="mt-2 px-3 py-1 bg-blue-600/20 border border-blue-500/30 rounded-full inline-block">
                        <span className="text-blue-300 text-sm">üé≠ Bu bir demo yanƒ±ttƒ±r</span>
                      </div>
                    )}
                  </div>
                  <div className="text-gray-200 leading-relaxed whitespace-pre-line">
                    {result}
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )}
        </motion.div>
      </div>
    </div>
  );
};

export default PremiumYorum;
